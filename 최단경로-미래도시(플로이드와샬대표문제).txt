#A에서 K를 거쳐 X로 가고자 할 때 최단 경로

INF = int(1e9)

n, m = map(int, input().split())
#INF로 초기화 된 nxn배열 선언
graph = [[INF]*(n+1) for _ in range(n+1)]
#자기 자신으로 가는 비용은 0으로 초기화
for a in range(n+1):
  for b in range(n+1):
    if a == b:
      graph[a][b] = 0
#각 간선에 대한 정보를 입력받아 그래프에 초기화
for _ in range(m):
  a, b = map(int, input().split())
  #a와 b는 서로에게 가는 비용 모두 1로 초기화
  graph[a][b] = 1
  graph[b][a] = 1
#거쳐갈 노드X와 최종목적지K입력
X, K = map(int, input().split())
#플로이드 워샬 알고리즘 수행
for k in range(1, n+1):
  for a in range(1, n+1):
    for b in range(1, n+1):
      graph[a][b] = min(graph[a][b], graph[a][k]+graph[k][b])

print(graph[1][K] + graph[K][X]) 