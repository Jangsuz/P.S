from collections import deque
import copy

#노드의 개수 입력
v = int(input())
#진입차수 0으로 초기화
indegree = [0] * (v + 1)
#각 노드에 연결된 간선 정보를 담기 위한 연결리스트 초기화
graph = [[] for _ in range(v+1)]
#각 강의시간을 0으로 초기화
time = [0] * (v + 1)
#방향 그래프의 모든 간선 정보 입력!
#입력받는 data의 길이가 다를 때. 참고
for i in range(1, v+1):
  data = list(map(int, input().split()))
  time[i] = data[0]
  for x in data[1:-1]:
    indegree[i] += 1
    graph[x].append(i)

def topology_sort():
  #리스트의 값 복제
  result = copy.deepcopy(time)
  q = deque()

  for i in range(1, v+1):
    if indegree[i] == 0:
      q.append(i)
  
  while q:
    now = q.popleft()
    for i in graph[now]:
      result[i] = max(result[i], result[now] + time[i])
      indegree[i] -= 1
      if indegree[i] == 0:
        q.append(i)

  for i in range(1, v+1):
    print

topology_sort()